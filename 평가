
### General instructions
* signature.txt file이 root of the cloned repository에 있는지 확인할것
* signatrue.txt에 포함된 signatrue가 평가할 가상 머신의 ".vdi" 파일과 동일한지 확인하십시오. 간단한 "diff"를 통해 두 서명을 비교할 수 있습니다.

86bf01b4318c917ffd04a4d42ba13ff50f909fdd


* 필요한 경우 평가 중인 학생에게 ".vid" 파일이 있는 위치를 묻습니다.
* 예방 조치로 복사본을 유지하기 위해 초기 가상 머신을 복제할 수 있습니다.
* 평가할 가상 머신을 시작합니다.
* 무언가가 예상대로 작동하지 않거나 두 서명이 다른 경우 평가가 여기서 중지됩니다.

### Mandatory Part
이 프로젝트는 엄격한 규칙에 따라 가상 머신을 만들고 구성하는 것으로 구성됩니다.
평가된 학생은 방어하는 동안 당신을 도와야 합니다.
다음 사항이 모두 지켜졌는지 확인하십시오.

Project overview

평가 대상 학생은 귀하에게 다음을 간단히 설명해야 합니다.

* 가상머신의 기능에 대한 기본적인 내용
* Operating system의 선택
* Centos and Debian의 기본적인 차이점
* 가상머신에 대한 관심
* 데비안을 선택했을 경우 : aptitude and apt 의 차이점 그리고 what APPAmor 를 설명해야한다.
* 방어하는 동안 스크립트는 5분마다 모든 정보를 표시해야 합니다.
* 동작은 나중에 자세히 확인하겠습니다.

Simple setup

피평가자는 평가자가 체크하길 원하는 항목을 도와주어야한다.

* 시작 시 시스템에 그래픽 환경이 없는지 확인하십시오.
* 이 컴퓨터에 연결을 시도하기 전에 암호를 요청합니다.
* 마지막으로 평가된 학생의 도움으로 사용자와 연결합니다.
* 이 사용자는 루트가 아니어야 합니다.

선택한 비밀번호에 주의하십시오. 주제에 부과된 규칙을 따라야 합니다.
* 평가자의 도움으로 UFW 서비스가 시작되었는지 확인하십시오.
* SSH 서비스가 시작되었는지 확인
* 선택한 운영 체제가 Debian 또는 Centos인지 확인하십시오.

User

* 과제는 평가된 학생의 로그인을 가진 사용자가 가상 ​​머신에 존재하도록 요청합니다.
* 사용자가추가되었고 "sudo" 및 "user42" 그룹에 속하는지 확인하십시오.

다음 단계에 따라 암호 정책과 관련하여 주제에 부과된 규칙이 적용되었는지 확인하십시오.
* 새 사용자를 만듭니다. 주제 규칙을 준수하여 선택한 암호를 할당하십시오.
* 평가된 학생은 이제 가상 머신에서 과제에서 요청한 규칙을 어떻게 설정할 수 있었는지 설명해야 합니다.
* 일반적으로 하나 또는 두 개의 수정된 파일이 있어야 합니다.
* 이제 새 사용자가 생겼으므로 평가 중인 학생에게 "evaluating"이라는 그룹을 만들고 이 사용자에게 할당하도록 요청합니다. 마지막으로 이 사용자가 "evaluating" 그룹에 속하는지 확인합니다.
* 마지막으로 평가된 학생에게 이 암호 정책의 장점과 구현의 장점과 단점을 설명하도록 요청합니다.
* 물론 과제가 요구하기 때문이라고 답하는 것은 포함하지 않는다.


Hostname and partitions

시스템의 호스트 이름이 다음과 같은 형식으로 올바르게 지정되었는지 확인합니다.
* login42(평가받는 학생의 로그인)
* 로그인을 귀하의 것으로 바꾸어 이 호스트 이름을 수정한 다음 시스템을 다시 시작하십시오.
* 이제 지금 시스템을 원래 호스트 이름으로 복원할 수 있습니다.
* 이 가상 머신의 파티션을 보는 방법을 평가한 학생에게 질문합니다.
* 출력물을 주제에 주어진 예와 비교하십시오.
* 참고: 평가된 학생이 보너스를 받는 경우 보너스 예를 참조해야 합니다
* 이 부분은 점수에 대해 토론하는 기회입니다.
* 평가를 받는 학생은 LVM이 어떻게 작동하고 무엇에 관한 것인지에 대한 간략한 설명을 제공해야 합니다.

SUDO

* 가상 머신에 sudo가 잘 설치되었는지 체크해라.
* 평가받는 학생은 지금 새로운 유저를 “sudo”그룹에 할당하는것을 보여주어라.
* 과제는 sudo에 대한 엄격한 규칙을 부과합니다.
* 평가 대상 학생은 먼저 선택한 예를 사용하여 sudo의 가치와 작동을 설명해야 합니다.

두 번째 단계에서는 주제에 의해 부과된 규칙의 구현을 보여주어야 합니다.

* “/var/log/sudo/" 폴더가 존재하고 적어도 하나의 파일이 있는지 확인하십시오.
* 마지막으로 sudo를 통해 명령을 실행하십시오.
* “/var/log/sudo/" 폴더의 파일이 업데이트되었는지 확인합니다.


UFW
* “UFW”프로그램이 적당하게 가상머신에 설치되었는지 확인해라.
* 잘 작동하는지를 확인해라
* 피평가자는 UFW가 무엇인지 기본적으로 설명할수 있는지, 사용하는 것의 가치를 설명할 수 있는지 평가받아라.
* UFW의 활성 규칙을 나열합니다.
* 포트 4242에 대한 규칙이 있어야 합니다.
* 포트 8080을 열려면 새 규칙을 추가하십시오. 활성 규칙을 나열하여 이 규칙이 추가되었는지 확인하십시오.
* 마지막으로, 피평가자의 도움을 받아서 새로운 규칙을 삭제해라


SSH
* SSH서비스가 잘 설치 되었는지 확인하라
* 잘 작동하는지 확인하라
* 기본적인 SSH에 대한 설명과 이것을 사용하는것에 대한 가치를 설명하라.
* SSH 서비스가 포트 4242만 사용하는지 확인합니다.
* 피평가자은 새로 생성된 사용자로 로그인하기 위해 SSH를 사용하도록 도와주어라.
* 이렇게 하려면 키 또는 간단한 암호를 사용할 수 있습니다.
* 물론 주제에 명시된 "루트" 사용자와 SSH를 사용하지 않도록 해야 합니다.


Script monitoring

피 평가자는 다음의 내용을 간단하게 설명해야한다:
* 코드를 보여주며 스크립트의 작동을 설명
* “Cron”이 뭔지 설명하라
* 서버가 시작 될때 매 10분마다 스크립트가 동작하는것을 어떻게 셋업 했는지 설명
스크립트의 올바른 기능이 확인되면 평가된 학생은 이 스크립트가 30초마다 실행되는지 확인해야 합니다.
스크립트가 동적 값으로 올바르게 실행되고 평가된 학생이 스크립트를 수정하지 않고 서버가 시작될 때 스크립트 실행을 중지하도록 하기 위해 원하는 모든 것을 실행할 수 있습니다.
이 점을 확인하려면 마지막으로 서버를 다시 시작해야 합니다.
시작할 때 스크립트가 여전히 같은 위치에 있는지, 권한이 변경되지 않았는지, 수정되지 않았는지 확인해야 합니다.
* 
